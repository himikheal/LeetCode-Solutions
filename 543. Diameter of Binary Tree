# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):

    def depth(self, node, dia):
        if(node.left == None):
            l = 0
        else:
            l = self.depth(node.left, dia)
        if(node.right == None):
            r = 0
        else:
            r = self.depth(node.right, dia)
        if(l + r > dia[0]):
            dia[0] = l+r
        return max(l, r) + 1
    
    def diameterOfBinaryTree(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        d = [0]
        self.depth(root, d)
            
        return d[0]

        
    
