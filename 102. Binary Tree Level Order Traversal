# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def levelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        if not root:
            return []
        elif root.left == None and root.right == None:
            return [[root.val]]
        
        queue = deque()
        res = []
        queue.append(root)
        while queue:
            level = []
            levelLen = len(queue)
            for i in range(levelLen):
                current = queue.popleft()
                level.append(current.val)
                if current.left:
                    queue.append(current.left)
                if current.right:
                    queue.append(current.right)
            res.append(level)

        return res
            

            

