# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def minDepth(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        if not root:
            return 0
        count = 0
        # bfs set up
        queue = deque()
        queue.append(root)
        found = False
        while queue and not found:
            # track level size
            size = len(queue)
            count += 1
            for i in range(size):
                current = queue.popleft()
                if not current.left and not current.right:
                    found = True
                    break
                else:
                    if current.left:
                        queue.append(current.left)
                    if current.right:
                        queue.append(current.right)

        return count
